<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.kh.carnping" />
	
	<!-- KakaoLoginBO Class에 대한 Bean 설정 추가 -->
	<beans:bean id="kakaoLoginBO" class="com.kh.carnping.member.model.vo.KakaoLoginBO"/>
	
	<!-- NaverLoginBO Class에 대한 Bean설정 추가 -->
	<beans:bean id="naverLoginBO" class="com.kh.carnping.member.model.vo.NaverLoginBO" />
	
	
	<!-- GoogleLoginBO Class에 대한 Bean설정 추가 -->
	<beans:bean id="googleLoginBO" class="com.kh.carnping.member.model.vo.GoogleLoginBO" />

	<!-- 소영 :  실시간 알람을 위한 웹소켓 핸들러   -->
		<beans:bean id="alarmHandler" class="com.kh.carnping.common.model.vo.AlarmHandler" />
		<websocket:handlers> 
		<!-- 네임스페이스 등록안하면 빨간줄 , 아래 탭에서 체크하기 -->
			<websocket:mapping handler="alarmHandler" path="/alarm" />
		    <websocket:handshake-interceptors>
			    	<!-- 로그인한 유저의 아이디를 작성자(알람받을사람)에게 알려줘야하니까 웹소켓세션에다가 HTTP세션을 올려줌  -->
		        <beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
		    </websocket:handshake-interceptors>	
		</websocket:handlers>
	<!-- 소영 끝  -->
	
</beans:beans>

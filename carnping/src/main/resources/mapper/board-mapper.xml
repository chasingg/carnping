<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="boardMapper">

	<resultMap type="Board" id="boardResultMap">
		<result column="BOARD_NO" property="boardNo"/>
		<result column="BOARD_TITLE" property="boardTitle"/>
		<result column="MEM_NO" property="memNo"/>
		<result column="CREATE_DATE" property="createDate"/>
		<result column="LOCATION" property="location"/>
		<result column="BOARD_CONTENT" property="boardContent"/>
		<result column="COUNT" property="count"/>
		<result column="STATUS" property="status"/>
		<result column="BOARD_ORIGIN_IMG1" property="boardOriginImg1"/>
		<result column="BOARD_ORIGIN_IMG2" property="boardOriginImg2"/>
		<result column="BOARD_ORIGIN_IMG3" property="boardOriginImg3"/>
		<result column="BOARD_ORIGIN_IMG4" property="boardOriginImg4"/>
		<result column="BOARD_ORIGIN_IMG5" property="boardOriginImg5"/>
		<result column="BOARD_CHANGE_IMG1" property="boardChangeImg1"/>
		<result column="BOARD_CHANGE_IMG2" property="boardChangeImg2"/>
		<result column="BOARD_CHANGE_IMG3" property="boardChangeImg3"/>
		<result column="BOARD_CHANGE_IMG4" property="boardChangeImg4"/>
		<result column="BOARD_CHANGE_IMG5" property="boardChangeImg5"/>
		<result column="MEM_ID" property="memId"/>
		<result column="BOARD_LTTD" property="boardLttd"/>
		<result column="BOARD_HRDNS" property="boardHrdns"/>
		<result column="BOARD_ADDRESS" property="boardAddress"/>
	</resultMap>


	<resultMap type="Comment" id="commentResultMap">
		<result column="RE_NO" property="reNo"/>
		<result column="REF_NO" property="refNo"/>
		<result column="MEM_NO" property="memNo"/>
		<result column="CREATE_DATE" property="createDate"/>
		<result column="COMM_CONTENT" property="commContent"/>
		<!-- 소영 아래 추가함 -->
		<result column="BOARD_TITLE" property="boardTitle"/>
	</resultMap>
	
	
	<resultMap type="BoardReply" id="boardReplyResultMap">
		<result column="BRE_NO" property="breNo"/>
		<result column="BOARD_NO" property="boardNo"/>
		<result column="MEM_NO" property="memNo"/>
		<result column="CREATE_DATE" property="createDate"/>
		<result column="COMM_CONTENT" property="commContent"/>
		<result column="MEM_ID" property="memId"/>
		<result column="MEM_IMG_ORIGIN" property="memImgOrigin"/>
		<result column="MEM_IMG_CHANGE" property="memImgChange"/>
		<result column="STATUS" property="status"/>
		<result column="BOARD_TITLE" property="boardTitle"/>
	</resultMap>
	
	
	<!-- 여기부턴 무료나눔 -->
	
	<!-- 최신순 버튼 -->
	<select id="selectLastest" resultMap="boardResultMap">
		select
		       board_no,
		       board_change_img1,
		       board_title,
		       mem_id,
		       location,
		       phone,
		       create_date
		  from fboard
		  join board_img using (board_no)
		  join member using(mem_no) and board_no like 'BRD%'
		 order 
		    by create_date desc
	</select>
	
	
	<!-- 무료나눔 게시판 조회 -->
	<select id="selectFreeBoardList" resultMap="boardResultMap">
		select
			       board_no,
			       board_change_img1,
			       board_title,
			       mem_id,
			       location,
			       phone
			  from fboard f
			  left join board_img using(board_no)
	  		  left join member m using(mem_no)
	         where f.status = 'Y' and board_no like 'BRD%'
	         order
	            by board_no desc 
	</select>
	
	
	<!-- 무료나눔 게시판 상세조회 -->
	<select id="selectFreeBoardDetail" resultMap="boardResultMap">
		select 
		       board_no,
		       board_change_img1,
		       board_change_img2,
		       board_change_img3,
		       board_change_img4,
		       board_origin_img1,
		       board_origin_img2,
		       board_origin_img3,
		       board_origin_img4,
		       board_title,
		       mem_no,
		       mem_id,
		       nickname,
		       to_char(create_date, 'YYYY-MM-DD') as "create_date",
		       location,
		       board_content
		  from fboard
		  left join board_img using (board_no)
		  left join member using (mem_no)
		 where board_no = #{ bno } and board_no like 'BRD%'
	</select>
	
	
	<!-- 무료나눔 게시판 등록 -->
	<insert id="insertFreeBoard">
		insert
 		  into fboard
		     (
		       board_no,
		       board_title,
		       mem_no,
		       location,
		       board_content
		     )
		values
		     (
		       'BRD'||seq_brd_no.nextval,
		       #{boardTitle},
		       #{memNo},
		       #{location},
		       #{boardContent}
		     ) 
	</insert>
	
	
	<!-- 무료나눔 게시판 이미지 등록 -->
	<insert id="insertFreeBoardImage">
		insert
		  into board_img
		     (
		       board_no,
		       board_origin_img1,
		       board_change_img1,
		       board_origin_img2,
		       board_change_img2,
		       board_origin_img3,
		       board_change_img3,
		       board_origin_img4,
		       board_change_img4,
		       board_origin_img5,
		       board_change_img5
		     )
		values
		     (
		       'BRD'||seq_brd_no.currval,
		       #{boardOriginImg1},
		       #{boardChangeImg1},
		       #{boardOriginImg2},
		       #{boardChangeImg2},
		       #{boardOriginImg3},
		       #{boardChangeImg3},
		       #{boardOriginImg4},
		       #{boardChangeImg4},
		       #{boardOriginImg5},
		       #{boardChangeImg5}
		     )
	</insert>
	
	
	<!-- 무료나눔 게시판 수정 -->
	<update id="updateFreeBoard">
		update
			   fboard
		   set board_title = #{boardTitle}
		     , location = #{location}
		     , board_content = #{boardContent}
		 where board_no = #{boardNo} 
	</update>
	
	
	<!-- 무료나눔 게시판 이미지 수정 -->
	<update id="updateFreeBoardImage">
		update
			   board_img
		   set board_origin_img1 = #{boardOriginImg1}
		     , board_change_img1 = #{boardChangeImg1}
		     , board_origin_img2 = #{boardOriginImg2}
		     , board_change_img2 = #{boardChangeImg2}
		     , board_origin_img3 = #{boardOriginImg3}
		     , board_change_img3 = #{boardChangeImg3}
		     , board_origin_img4 = #{boardOriginImg4}
		     , board_change_img4 = #{boardChangeImg4}
		     , board_origin_img5 = #{boardOriginImg5}
		     , board_change_img5 = #{boardChangeImg5}
		 where board_no = #{boardNo}   
	</update>
	
	
	<!-- 무료나눔 게시판 삭제 -->
	<update id="deleteFreeBoard">
		update
			   fboard
		   set status = 'N'
		 where board_no = #{bno}
	</update>
	
	
	
	
	
	<!-- 여기부턴 소모임 -->
	<!-- 소모임 게시판 조회 -->
	<select id="selectPartyBoardList" resultMap="boardResultMap">
		select
			       board_no,
			       board_change_img1,
			       board_title,
			       mem_id,
			       location,
			       phone
			  from fboard f
			  left join board_img using(board_no)
	  		  left join member m using(mem_no)
	         where f.status = 'Y' and board_no like 'PRT%'
	         order
	            by board_no desc 
	</select>
	
	
	<!-- 소모임 게시판 상세조회 -->
	<select id="selectPartyBoardDetail" resultMap="boardResultMap">
		select 
		       board_no,
		       board_title,
		       mem_id,
		       mem_no,
		       to_char(create_date, 'YYYY-MM-DD') as "create_date",
		       board_content,
		       board_lttd,
		       board_hrdns,
		       board_address
		  from fboard
		  left join board_img using (board_no)
		  left join member using (mem_no)
		 where board_no = #{ bno } and board_no like 'PRT%'
	</select>
	
	
	<!-- 소모임 게시판 등록 -->
	<insert id="partyBoardInsert">
		insert
 		  into fboard
		     (
		       board_no,
		       board_title,
		       mem_no,
		       board_lttd,
		       board_hrdns,
		       board_address,
		       board_content
		     )
		values
		     (
		       'PRT'||seq_brd_no.nextval,
		       #{boardTitle},
		       #{memNo},
		       #{boardLttd},
		       #{boardHrdns},
		       #{boardAddress},
		       #{boardContent}
		     ) 
	</insert>
	
	
	<!-- 소모임 게시판 삭제 -->
	<update id="deletePartyBoard">
		update
			   fboard
		   set status = 'N'
		 where board_no = #{bno}
	</update>
	
	
	<!-- 소모임 게시판 수정 -->
	<update id="updatePartyBoard">
		update
			   fboard
		   set board_title = #{boardTitle}
		     , board_content = #{boardContent}
		     , board_lttd = #{boardLttd}
		     , board_hrdns = #{boardHrdns}
		     , board_address = #{boardAddress}
		 where board_no = #{boardNo} 
	</update>
	
	
	
	
	
	
	
	
	<!-- 무료나눔 댓글 리스트 조회 -->
	<select id="selectFreeReplyList" resultMap="boardReplyResultMap">
		select
			   bre_no
			 , board_no
			 , m.mem_no 
			 , to_char(create_date, 'YYYY-MM-DD') as "create_date"
			 , comm_content
			 , mem_id
			 , mem_img_origin
			 , mem_img_change
		  from board_reply r
		  left join member m on (m.mem_no = r.mem_no)
	     where board_no = #{bno}
	       and r.status = 'Y' and board_no like 'BRD%'
	     order
	        by bre_no asc
	</select>
	
	
	<!-- 무료나눔 댓글 등록 -->
	<insert id="freeReplyInsert">
		insert
		  into board_reply
		  (
		    bre_no
		  , board_no
		  , mem_no
		  , comm_content
		  )
		  values
		  (
		    'BRD' || seq_bdr_no.nextval
		  , #{boardNo}
		  , #{memNo}
		  , #{commContent}
		  )
	</insert>
	
	
	<!-- 소모임 댓글 리스트 조회 -->
	<select id="selectPartyReplyList" resultMap="boardReplyResultMap">
		select
			   bre_no
			 , board_no
			 , m.mem_no 
			 , to_char(create_date, 'YYYY-MM-DD') as "create_date"
			 , comm_content
			 , mem_id
			 , mem_img_origin
			 , mem_img_change
		  from board_reply r
		  left join member m on (m.mem_no = r.mem_no)
	     where board_no = #{bno}
	       and r.status = 'Y' and board_no like 'PRT%'
	     order
	        by bre_no asc
	</select>
	
	
	<!-- 소모임 댓글 등록 -->
	<insert id="partyReplyInsert">
		insert
		  into board_reply
		  (
		    bre_no
		  , board_no
		  , mem_no
		  , comm_content
		  )
		  values
		  (
		    'PRT' || seq_bdr_no.nextval
		  , #{boardNo}
		  , #{memNo}
		  , #{commContent}
		  )
	</insert>
	
	
	
	
	
	<!-- 공지사항 등록 -->
	<insert id="noticeBoardInsert">
		insert
 		  into fboard
		     (
		       board_no,
		       board_title,
		       mem_no,
		       board_content
		     )
		values
		     (
		       'TRA'||seq_brd_no.nextval,
		       #{boardTitle},
		       #{memNo},
		       #{boardContent}
		     ) 
	</insert>
	
	
	<!-- 공지사항 조회 -->
	<select id="selectNoticeBoardList" resultMap="boardResultMap">
		select
			       board_no,
			       board_title,
			       mem_id,
			       to_char(create_date, 'YYYY-MM-DD') as "create_date"
			  from fboard f
	  		  left join member m using(mem_no)
	         where f.status = 'Y' and board_no like 'TRA%'
	         order
	            by board_no desc 
	</select>
	
	
	
	<!-- 공지사항 상세조회 -->
	<select id="selectNoticeBoardDetail" resultMap="boardResultMap">
		select 
		       board_no,
		       board_title,
		       mem_id,
		       to_char(create_date, 'YYYY-MM-DD') as "create_date",
		       location,
		       board_content
		  from fboard
		  left join member using (mem_no)
		 where board_no = #{ bno } and board_no like 'TRA%'
	</select>
	
	
	
	<!-- 공지사항 수정 -->
	<update id="updateNoticeBoard">
		update
			   fboard
		   set board_title = #{boardTitle}
		     , board_content = #{boardContent}
		 where board_no = #{boardNo} 
	</update>
	
	
	<!-- 공지사항 삭제 -->
	<update id="deleteNoticeBoard">
		update
			   fboard
		   set status = 'N'
		 where board_no = #{bno}
	</update>
	
	
	
	
	<!-- 소영 : 내가 쓴글 목록 페이징을 위한 내가쓴게시판글 개수조회 -->
	<select id="selectMyBoardListCount" resultType="_int">
  	  SELECT
  	  		 COUNT(*)
  	  	FROM FBOARD
  	   WHERE MEM_NO = (SELECT MEM_NO FROM MEMBER WHERE MEM_ID = #{memId})
  	     AND STATUS = 'Y'
	</select>
	
	<!-- 소영 : 내가 쓴글 목록 조회 -->
	<select id="selectMyBoardList" resultMap="boardResultMap">
		SELECT
			  BOARD_NO
			, BOARD_TITLE
			, MEM_ID
			, to_char(create_date, 'YY.MM.DD HH:mm:ss') as "CREATE_DATE"
			, LOCATION
			, BOARD_CONTENT
			, COUNT
			, F.STATUS
		 FROM FBOARD F
		 JOIN MEMBER M USING(MEM_NO)
		WHERE MEM_ID = #{memId}
		  AND F.STATUS = 'Y'
		ORDER
		   BY CREATE_DATE DESC
	</select>

	<!-- 소영 : 내가 쓴글 삭제  -->
	<update id="deleteBoard">
		update 
				fboard
			set status = 'N'
		  where board_no = #{boardNo}
	</update>
	
	
	<!-- 소영 : 내가쓴댓글목록 페이징을 위한 내댓글갯수 조회  -->
	<select id="selectMyCommentListCount" resultType="_int">
  	  SELECT
  	  		 COUNT(*)
  	  	FROM board_reply
  	   WHERE MEM_NO =  #{memNo}
  	     AND STATUS = 'Y'
	</select>
	
	
	<!-- 소영 : 내가쓴 댓글목록 조회 -->
	<select id="selectMyCommentList" resultMap="boardReplyResultMap">
        select
			   bre_no
			 , r.board_no
			 , to_char(r.create_date, 'YY.MM.DD HH:mm:ss') as "create_date"
			 , comm_content
			 , r.mem_no
             , board_title
		  from board_reply r
		  JOIN FBOARD F ON( F.board_no =R.BOARD_NO)
	      WHERE r.status = 'Y'
          and r.mem_no = #{memNo}
	     order
	        by r.create_date desc
	</select>
	
	<!-- 소영: 내가쓴 댓글 삭제 -->
	<update id="deleteComment">
		update board_reply
		   set status = 'N'
		 where bre_no = #{reNo}
	</update>
	

	<insert id="insertReport">
			insert
 		  into report
		     (
		       REPORT_NO,
		       MEM_NO,
		       REPORT_REFNO,
		       REPORT_DATE,
		       REPORT_DETAIL,
		       REPORTER_MEM_NO
		     )
		values
		     (
		       'RPT'||seq_rpt_no.nextval,
		       #{memNo},
		       #{reportRefNo},
		       default,
		       #{reportDetail},
		       #{reporterMemNo}
		     ) 
	</insert>

	<!-- 소영: 내가 댓글단거 게시글 제목 -->
	<select id="selectBoardTitle" resultMap="boardResultMap">
		select
		       board_no,			  
		       board_title
		  from fboard 
         where status = 'Y' and board_no = #{boardNo}
         
	</select>
	

	
</mapper>
